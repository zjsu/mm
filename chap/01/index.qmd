---
author: 浙江工商大学计算机学院
title: 第 1 章 对变化进行建模
image: cover.jpg
format:
  revealjs:
    theme: [white, custom.scss]
    mermaid:
      theme: neutral
---

## 弹簧系统

```{ojs}
spring_data = FileAttachment("spring.csv").csv({ typed: true })
```
:::: columns

::: {.column width="55%"}

```{ojs}
//| layout-ncol: 1
Plot.plot({
  grid: true,
  marks: [
    Plot.ruleY([0]),
    Plot.ruleX([0]),
    Plot.dot(spring_data, {x: "质量", y: "拉伸", symbol: "circle", fill: "currentColor"}),
    Plot.line([[0, 0], [550, 8.9375]], {stroke: "green"}),
    Plot.dot([[200, 3.25], [300, 4.875]], {fill: "red"}),
    Plot.text(["e = 0.01625m"], {x: 250, y: 3, fontSize: 16, fontWeight: "bold"})
  ]
}) 
```
$斜率 = \frac{4.875-3.25}{300-200} = 0.01625$

:::

::: {.column width="25%" height="100%"}

```{ojs}
Inputs.table(spring_data, {
  // TODO: uncomment the following when observable is updated
  // select: false,
  format: {
    '拉伸': d => d.toFixed(3)
  },
  align: {
    '质量': "left"
  },
  height: "100%" })
```
:::

::: {.column width="20%"}
![](spring.png)
:::

::::

## 对变化进行建模

* 未来值 = 现在值 + 变化
* 变化 = 未来值 - 现在值
* **离散时间**: 差分方程(difference equation)
* **连续时间**: 微分方程(第11章)

## 差分方程

对于数列$A = {a_0, a_1, a_2, a_3, \cdots}$, 其一阶差分定义为:

:::: columns
::: {.column width="40%"}
$$
\Delta a_0 = a_1 - a_0 \\
\Delta a_1 = a_2 - a_1 \\
\Delta a_2 = a_3 - a_2 \\
\Delta a_3 = a_4 - a_3 \\
\cdots \\
\Delta a_n = a_{n+1} - a_n
$$
:::
::: {.column width="60%"}
![](images/difference.png)
:::
::::

## 储蓄问题{ .smaller }

考虑本金1000美元, 月利息1%的储蓄问题: $A = (1000, 1010, 1020.10, 1030.30, ...)$.

$$
\Delta a_0 = a_1 - a_0 = 1010.0 - 1000.0 = 10.0 \\
\Delta a_1 = a_2 - a_1 = 1020.1 - 1010.0 = 10.1 \\
\Delta a_2 = a_3 - a_2 = 1030.3 - 1020.1 = 10.2 \\
\cdots \\
\Delta a_n = a_{n+1} - a_n = 0.01a_n \\
$$

$$
a_{n+1} = a_n + 0.01a_n = 1.01a_n, n = 0, 1, 2, 3 \\
a_0 = 1000
$$

::: fragment
如果每月取出50美元$\cdots$

$$\Delta a_n = a_{n+1} - a_n = 0.01a_n - 50$$
:::

## 如何找出变化?

在多数情况下, 很难象上述例子那样精确表述, 因此我们通过如下步骤找出变化:

::: callout-important
1.  画出变化
2.  观察变化规律
3.  用数学术语描述变化
:::

变化 = $\Delta a_n$ = 某个函数$f$

对于离散情况:

变化 = $\Delta a_n$ = $a_{n+1} - a_n$ = $f$(序列中的项, 外部项)

## 按揭买房

六年前按揭20年买了一套80000美元的房子, 月供880.87美元并付每月1%的利息. 问现在还欠银行多少?

$$\Delta b_n = b_{n+1} - b_n = 0.01b_n - 880.87$$

求解下列方程即可:

$$
\begin{align*}
b_{n+1} &= 1.01b_n - 880.87 \\
b_0 &= 80000
\end{align*}
$$

$$B = (80000, 79919.13, 79837.45, \cdots)$$

## 按揭买房

![](mort.png)

## 用差分方程来近似变化

- 变化 = $\Delta a_n$ = 某个函数$f$
- 离散变化与连续变化
- 模型的细化: 生、死、资源

## 酵母培养 -- 找出模型

![](yeast.png)

$$\Delta p_n = p_{n+1} - p_n = k(665 - p_n)p_n$$

## 酵母培养 -- 模型数值求解

![](yeast-fit.png){.smaller}

$$k \approx 0.00082$$ $$p_{n+1} = p_n + 0.00082(665 - p_n)p_n$$

## 酵母培养 -- 模型验证

![](yeast-verify.png)

$$p_{n+1} = p_n + 0.00082(665 - p_n)p_n$$

::: {.callout-tip title="思考"}
如何为书上例2传染病传播模型加入其它因素?
:::

## 地高辛在血流中的变化

::: small-table
| n            | 0      | 1      | 2      | 3      | 4      | 5      | 6      | 7      | 8     |
|--------------|--------|--------|--------|--------|--------|--------|--------|--------|-------|
| $a_n$        | 0.5    | 0.345  | 0.238  | 0.164  | 0.113  | 0.078  | 0.054  | 0.037  | 0.026 |
| $\Delta a_n$ | -0.155 | -0.107 | -0.074 | -0.051 | -0.035 | -0.024 | -0.017 | -0.011 |       |
:::

:::: columns

::: {.column width=50%}
![](images/digoxin.png)
:::

::: {.column width=50%}
$$
\Delta a_n = -0.31a_n \\
a_{n+1} -  a_n = -0.31a_n \\
a_{n+1} = 0.69a_n
$$
:::
::::

## 动态系统的解法 -- 猜测 {.smaller} 

:::: columns
::: {.column width=60%}
存款问题: $a_{n+1} = 1.01a_n, a_0 = 1000$

$$
\begin{align*}
a_1 &= 1010.0 = 1.01(1000)\\
a_2 &= 1020.1 = 1.01(1010) = 1.01^2 (1000)\\
a_3 &= 1030.3 = 1.01(1020.1) = 1.01^3 (1000)\\
a_4 &= 1040.6 = 1.01(1030.3) = 1.01^4 (1000)
\end{align*}
$$

:::
::: {.column width=40%}
![](saving.png)
:::
::::

## 动态系统的解法 -- 猜测 

猜测: $a_k = 1.01^k(1000)$
验证、结论: ...

::: {.callout-tip title="猜测法的一般步骤"}
1.  观察模式
2.  猜测动力系统的形式
3.  用带入法来测试该猜测
4.  接受或拒绝该推测：取决于代入和代数运算后结果是否满足该动力系统。
:::

推论： 形式为$a_{n+1} = ra_n$的动态系统的解为$a_k = r^k a_0$.

## $a_{n+1}=ra_n$

$r = ?$

:::: columns
::: { .column width=40% }
![](r0.png)
![](rn.png)
:::

::: { .column width=20% }
:::

::: { .column width=40% }
![](rf.png)
![](rnf.png)
:::
::::


## $a_{n+1}=ra_n + b$

![](rb.png){width=40%}

## 不动点(平衡点）

![Digoxin浓度变化](fixedpoint.png)

## 不动点

$$a_{n+1} = 1.01a_n -1000$$

![投资](invest.png)

## $r = 1$

$$a_{n+1} = a_n -300$$

![](poor.png)

## 不动点

$a_{n+1} = ra_n + b, r \neq 1$的不动点为：

$$a = \frac{b}{1-r}$$

上述动态系统的解为： $a_k=r^kc+\frac{b}{1-r}$.

::: {.callout-tip title="思考"}
$r$的值不同时，长期来说系统如何变化？
:::

## 非线性系统

![](nonlinear.png){width=40%}

## 差分方程组

- 找出不动点
- 当初始值在不动点附近时，系统如何变化

研究系统的长期变化，看系统对如下条件是否敏感：

- 初始条件
- 对模型中的常量进行扰动

## 汽车租赁公司

:::: columns
::: {.column width=60%}
![](taxi.png)
:::
::::

* $O_n$: 第$n$天营业结束时在奥兰多的车辆数
* $T_n$: 第$n$天营业结束时在坦帕的车辆数

$$
\begin{align*}
O_{n+1} &=0.6O_n + 0.3T_n \\
T_{n+1} &=0.4O_n + 0.7T_n
\end{align*}
$$

## 计算平衡点 

如果存在平衡点$O$, $T$: $$O=O_{n+1}=O_n$$ $$T=T_{n+1}=T_n$$
推导出： $$O=0.6O + 0.3T$$ $$T=0.4O + 0.7T$$

## 方程求解 

$O=\frac{3}{4}T$满足上述方程组.
如果公司有7000辆车，则$(O, T) = (3000, 4000)$处开始，保持不变。

分析下述四种初始条件：

![](taxi-cases.png){width="40%"}

## 分析

![](taxi-case12.png){width="40%"}

## 分析

![](taxi-case34.png){width="40%"}

## 结论
四种情形中每一种情形在一周内都是和平衡点$(3000,4000)$很接近的，甚至在其中一个城市没有车的情况也是如此。结果显示，平衡点是稳定的而且对初始值不敏感的。

思考:该系统是否对$O_{n+1}$和$T_{n+1}$的系数敏感？

## 特拉法尔加战斗

法西联军33艘战舰，英军27艘战舰，在一次遭遇战中每方的战舰损失都是对方战舰的$10\%$。

**动力系统模型** 令$n$表示战斗过程中遭遇战的阶段并定义：

- $B_n =$第$n$阶段英军的战舰数
- $F_n =$第$n$阶段法西联军的战舰数

## 死拼打法

战斗结束：英军全面战败，剩3艘战舰其中一艘严重损坏，法军大约还有18艘战舰。

![](fight-death.png){width="40%"}

## 各个击破

![](fight-france.png){width="40%"}

策略：英军13艘攻击$A$；然后，全力攻击$B$，最后攻击$C$。

## 战斗A

![](fight-A.png){width="40%"}

## 战斗B

![](fight-B.png){width="40%"}

## 战斗C

![](fight-C.png){width="40%"}

## 战果
英军大获全胜。现实世界：法西联军没有参加战斗C，而是把剩下的约13艘战舰撤回法国。

## 斑点猫头鹰和隼

- $O_n$, $H_n$分别表示第$n$天猫头鹰和隼的数量
- $\Delta O_n=k_1O_n$, $\Delta H_n=k_2H_n$ (不考虑竞争）
- $\Delta O_n=k_1O_n - k_3O_nH_n$, $\Delta H_n=k_2H_n-k_4O_nH_n$ (考虑竞争）
- $O_{n+1}=(1+k_1)O_n - k_3O_nH_n$
- $H_{n+1}=(1+k_2)H_n-k_4O_nH_n$

## 求解平衡点

- $O_{n+1}=1.2O_n - 0.001O_nH_n$
- $H_{n+1}=1.3H_n - 0.002O_nH_n$

如果$(O,H)$为平衡点则$O_{n+1}=O_n=O$, $H_{n+1}=H_n=H$：

- $O=1.2O - 0.001OH \Rightarrow O = 0 or H = 200$
- $H=1.3H - 0.002OH \Rightarrow H = 0 or O = 150$

## 平衡点分析 

两个平衡点: $(0, 0)$, $(150, 200)$. 为什么？

![](owl.png){width="40%"}
![](owl-start.png){width="40%"}

## 情况1

![](owl-1.png){width="40%"}

## 情况2

![](owl-2.png){width="40%"}

## 情况3

![](owl-3.png){width="40%"}

## 对初始条件的敏感性和长期行为 

如果在栖息地安置350只猫头鹰和隼：

1.  如果150头为猫头鹰：猫头鹰和隼的数量不变（150、200）
2.  如果149头或更少猫头鹰：猫头鹰将灭绝
3.  如果151头或更多猫头鹰：隼将灭绝
4.  该模型对初始条件极其敏感，平衡点不稳定。

## 旅客趋势

![](party.png){width="60%"}

* $S_n =$ 第$n$个旅行周乘坐US Airways的旅客数
* $U_n =$ 第$n$个旅行周乘坐United Airlines的旅客数
* $A_n =$ 第$n$个旅行周乘坐American Airlines的旅客数

## 差分方程组

$$
S_{n+1}=0.75S_n+0.20U_n+0.40A_n \\
U_{n+1}=0.05S_n+0.60U_n+0.20A_n \\
A_{n+1}=0.20S_n+0.20U_n+0.40A_n
$$

平衡点: $S_{n+1}=S_n=S$, $U_{n+1}=U_n=U$, $A_{n+1}=A_n=A$:

$$
-0.25S+0.20U+0.40A=0 \\
0.05S-0.40U+0.20A=0 \\
0.20S+0.20U-0.60A=0
$$

## 平衡点分析

$S:U:A = 2.2221:0.7777694:1$

::: center
![](party-case.png){width=".8\\textwidth{}"}
:::

## 情况1

::: center
![](party-1.png){width=".9\\textwidth{}"}
:::

## 情况2

::: center
![](party-2.png){width=".9\\textwidth{}"}
:::

## 情况3

::: center
![](party-3.png){width=".9\\textwidth{}"}
:::

## 情况4

::: center
![](party-4.png){width=".9\\textwidth{}"}
:::

## 总结

系统相当稳定，即使刚开始没有人坐US Airways和United
Airlines的旅客数.
